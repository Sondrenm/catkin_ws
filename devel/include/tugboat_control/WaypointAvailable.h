// Generated by gencpp from file tugboat_control/WaypointAvailable.msg
// DO NOT EDIT!


#ifndef TUGBOAT_CONTROL_MESSAGE_WAYPOINTAVAILABLE_H
#define TUGBOAT_CONTROL_MESSAGE_WAYPOINTAVAILABLE_H

#include <ros/service_traits.h>


#include <tugboat_control/WaypointAvailableRequest.h>
#include <tugboat_control/WaypointAvailableResponse.h>


namespace tugboat_control
{

struct WaypointAvailable
{

typedef WaypointAvailableRequest Request;
typedef WaypointAvailableResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct WaypointAvailable
} // namespace tugboat_control


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::tugboat_control::WaypointAvailable > {
  static const char* value()
  {
    return "e256e0c870845448cbf5d0a1d2ba0749";
  }

  static const char* value(const ::tugboat_control::WaypointAvailable&) { return value(); }
};

template<>
struct DataType< ::tugboat_control::WaypointAvailable > {
  static const char* value()
  {
    return "tugboat_control/WaypointAvailable";
  }

  static const char* value(const ::tugboat_control::WaypointAvailable&) { return value(); }
};


// service_traits::MD5Sum< ::tugboat_control::WaypointAvailableRequest> should match 
// service_traits::MD5Sum< ::tugboat_control::WaypointAvailable > 
template<>
struct MD5Sum< ::tugboat_control::WaypointAvailableRequest>
{
  static const char* value()
  {
    return MD5Sum< ::tugboat_control::WaypointAvailable >::value();
  }
  static const char* value(const ::tugboat_control::WaypointAvailableRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::tugboat_control::WaypointAvailableRequest> should match 
// service_traits::DataType< ::tugboat_control::WaypointAvailable > 
template<>
struct DataType< ::tugboat_control::WaypointAvailableRequest>
{
  static const char* value()
  {
    return DataType< ::tugboat_control::WaypointAvailable >::value();
  }
  static const char* value(const ::tugboat_control::WaypointAvailableRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::tugboat_control::WaypointAvailableResponse> should match 
// service_traits::MD5Sum< ::tugboat_control::WaypointAvailable > 
template<>
struct MD5Sum< ::tugboat_control::WaypointAvailableResponse>
{
  static const char* value()
  {
    return MD5Sum< ::tugboat_control::WaypointAvailable >::value();
  }
  static const char* value(const ::tugboat_control::WaypointAvailableResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::tugboat_control::WaypointAvailableResponse> should match 
// service_traits::DataType< ::tugboat_control::WaypointAvailable > 
template<>
struct DataType< ::tugboat_control::WaypointAvailableResponse>
{
  static const char* value()
  {
    return DataType< ::tugboat_control::WaypointAvailable >::value();
  }
  static const char* value(const ::tugboat_control::WaypointAvailableResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TUGBOAT_CONTROL_MESSAGE_WAYPOINTAVAILABLE_H
